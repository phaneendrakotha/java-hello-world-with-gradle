# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- task: Cache@2
  inputs:
    key: 'cache-gradle'
    path: '$(System.DefaultWorkingDirectory)'


# - task: SonarQubePrepare@5
#   inputs:
#     SonarQube: 'sonarcloud'
#     scannerMode: 'Other'
#     cliProjectKey: java-hello-world
    
- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: SonarCloud
    organization: 'phaneendrakotha'
    projectKey: 'demo-gradle'