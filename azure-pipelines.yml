# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- task: Cache@2
  inputs:
    key: 'cache-gradle'
    path: '$(System.DefaultWorkingDirectory)'

# - task: SonarCloudPrepare@1
#   inputs:
#     SonarCloud: 'sonarcloud-ado'
#     organization: 'phaneendrakotha'
#     projectKey: 'demo-gradle'
#     #scannerMode: 'Other'
# - task: SonarCloudPrepare@1
#   inputs:
#     SonarCloud: 'sonarcloud-ado'
#     organization: 'phaneendrakotha'
#     scannerMode: 'CLI'
#     configMode: 'manual'
#     cliProjectKey: 'demo-gradle'
#     cliSources: '.'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud-ado'
    organization: 'phaneendrakotha'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'demo-gradle'
    cliSources: '.'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
       sonar.exclusions=*.java
       sonar.java.binaries=build/classes
       sonar.verbos=true
- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
