# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name : gradle-build
trigger:
  branches:
    include:
      - master

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
# - task: Cache@2
#   inputs:
#     key: 'cache-gradle'
#     path: '$(System.DefaultWorkingDirectory)'


# - task: SonarCloudPrepare@1
#   inputs:
#     SonarCloud: 'sonarcloud-ado'
#     organization: 'phaneendrakotha'
#     scannerMode: 'CLI'
#     extraProperties: |
#       # Additional properties that will be passed to the scanner, 
#       # Put one key=value per line, example:
#       sonar.exclusions=*.java
#       sonar.java.binaries=build/classes
#       sonar.verbose=true
#       sonar.projectKey=java-hello-world-with-gradle


# - task: SonarCloudAnalyze@1

# - task: SonarCloudPublish@1
#   inputs:
#     pollingTimeoutSec: '300'
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub-phaneendra'
    command: 'login'
    
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub-phaneendra'
    repository: 'phaneendrakotha'
    command: 'build'
    Dockerfile: '**/Dockerfile'